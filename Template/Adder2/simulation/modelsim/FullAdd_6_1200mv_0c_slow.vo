// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "04/09/2020 15:20:42"

// 
// Device: Altera EP4CE22E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FullAdd (
	Clk,
	A,
	B,
	Cin,
	Sum,
	Cout);
input 	Clk;
input 	A;
input 	B;
input 	Cin;
output 	Sum;
output 	Cout;

// Design Ports Information
// Sum	=>  Location: PIN_31,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Cout	=>  Location: PIN_30,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Clk	=>  Location: PIN_23,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Cin	=>  Location: PIN_24,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_25,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("FullAdd_6_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \Sum~output_o ;
wire \Cout~output_o ;
wire \Clk~input_o ;
wire \Clk~inputclkctrl_outclk ;
wire \B~input_o ;
wire \addr[1]~feeder_combout ;
wire \Cin~input_o ;
wire \addr[0]~feeder_combout ;
wire \A~input_o ;
wire \addr[2]~feeder_combout ;
wire \Mux0~0_combout ;
wire \Sum~reg0_q ;
wire \Mux1~0_combout ;
wire \Cout~reg0_q ;
wire [2:0] addr;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y10_N23
cycloneive_io_obuf \Sum~output (
	.i(\Sum~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Sum~output_o ),
	.obar());
// synopsys translate_off
defparam \Sum~output .bus_hold = "false";
defparam \Sum~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y11_N2
cycloneive_io_obuf \Cout~output (
	.i(\Cout~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Cout~output_o ),
	.obar());
// synopsys translate_off
defparam \Cout~output .bus_hold = "false";
defparam \Cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N8
cycloneive_io_ibuf \Clk~input (
	.i(Clk),
	.ibar(gnd),
	.o(\Clk~input_o ));
// synopsys translate_off
defparam \Clk~input .bus_hold = "false";
defparam \Clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \Clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \Clk~inputclkctrl .clock_type = "global clock";
defparam \Clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N22
cycloneive_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y14_N18
cycloneive_lcell_comb \addr[1]~feeder (
// Equation(s):
// \addr[1]~feeder_combout  = \B~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\B~input_o ),
	.cin(gnd),
	.combout(\addr[1]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \addr[1]~feeder .lut_mask = 16'hFF00;
defparam \addr[1]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y14_N19
dffeas \addr[1] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\addr[1]~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(addr[1]),
	.prn(vcc));
// synopsys translate_off
defparam \addr[1] .is_wysiwyg = "true";
defparam \addr[1] .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N15
cycloneive_io_ibuf \Cin~input (
	.i(Cin),
	.ibar(gnd),
	.o(\Cin~input_o ));
// synopsys translate_off
defparam \Cin~input .bus_hold = "false";
defparam \Cin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y14_N4
cycloneive_lcell_comb \addr[0]~feeder (
// Equation(s):
// \addr[0]~feeder_combout  = \Cin~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\Cin~input_o ),
	.cin(gnd),
	.combout(\addr[0]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \addr[0]~feeder .lut_mask = 16'hFF00;
defparam \addr[0]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y14_N5
dffeas \addr[0] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\addr[0]~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(addr[0]),
	.prn(vcc));
// synopsys translate_off
defparam \addr[0] .is_wysiwyg = "true";
defparam \addr[0] .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X0_Y14_N1
cycloneive_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y14_N24
cycloneive_lcell_comb \addr[2]~feeder (
// Equation(s):
// \addr[2]~feeder_combout  = \A~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\A~input_o ),
	.cin(gnd),
	.combout(\addr[2]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \addr[2]~feeder .lut_mask = 16'hFF00;
defparam \addr[2]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y14_N25
dffeas \addr[2] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\addr[2]~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(addr[2]),
	.prn(vcc));
// synopsys translate_off
defparam \addr[2] .is_wysiwyg = "true";
defparam \addr[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y14_N28
cycloneive_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = addr[1] $ (addr[0] $ (addr[2]))

	.dataa(gnd),
	.datab(addr[1]),
	.datac(addr[0]),
	.datad(addr[2]),
	.cin(gnd),
	.combout(\Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~0 .lut_mask = 16'hC33C;
defparam \Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y14_N29
dffeas \Sum~reg0 (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\Mux0~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Sum~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Sum~reg0 .is_wysiwyg = "true";
defparam \Sum~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y14_N30
cycloneive_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (addr[1] & ((addr[0]) # (addr[2]))) # (!addr[1] & (addr[0] & addr[2]))

	.dataa(gnd),
	.datab(addr[1]),
	.datac(addr[0]),
	.datad(addr[2]),
	.cin(gnd),
	.combout(\Mux1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux1~0 .lut_mask = 16'hFCC0;
defparam \Mux1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y14_N31
dffeas \Cout~reg0 (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\Mux1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Cout~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Cout~reg0 .is_wysiwyg = "true";
defparam \Cout~reg0 .power_up = "low";
// synopsys translate_on

assign Sum = \Sum~output_o ;

assign Cout = \Cout~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_101,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
